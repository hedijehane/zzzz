@{
    var debugCount = ViewBag.DebugPendingCount as int? ?? 0;
}

<div class="alert alert-info">
    <strong>DEBUG:</strong> Pending count = @debugCount
</div>

@model List<PFE.Application.DTOs.PublicationDto>

@{
    ViewData["Title"] = "Pending Publications";
    var successMessage = TempData["Success"] as string;
    var errorMessage = TempData["Error"] as string;
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Pending Publications for Your Department</h2>
        <a asp-controller="Home" asp-action="Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Back to Feed
        </a>
    </div>

    @if (!string.IsNullOrEmpty(successMessage))
    {
        <div class="alert alert-success alert-dismissible fade show">
            @successMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show">
            @errorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (Model == null || !Model.Any())
    {
        <div class="card">
            <div class="card-body text-center py-5">
                <i class="bi bi-inbox" style="font-size: 3rem; color: #6c757d;"></i>
                <h4 class="mt-3">No Pending Publications</h4>
                <p class="text-muted">There are currently no publications waiting for your approval.</p>
                <p class="text-muted small">New submissions from your department members will appear here.</p>
            </div>
        </div>
    }
    else
    {
        <div class="row g-4">
            @foreach (var pub in Model)
            {
                <div class="col-md-6 col-lg-4">
                    <div class="card h-100 shadow-sm">
                        <div class="card-header bg-light d-flex justify-content-between align-items-center">
                            <div>
                                <strong>@pub.AuthorName</strong>
                                <div class="text-muted small">@pub.CreatedAt.ToString("g")</div>
                            </div>
                            <span class="badge bg-warning text-dark">Pending Review</span>
                        </div>

                        <div class="card-body">
                            <p class="card-text">@pub.Content</p>

                            @if (pub.ImageData != null)
                            {
                                <div class="text-center my-3">
                                    <img src="@Url.Action("GetImage", "Publication", new { id = pub.Id })"
                                         class="img-fluid rounded"
                                         alt="Publication image"
                                         style="max-height: 200px; width: auto;">
                                </div>
                            }
                        </div>

                        <div class="card-footer bg-white">
                            <div class="d-flex justify-content-between">
                                <div class="text-muted small">
                                    <i class="bi bi-chat-left-text"></i> @pub.Comments.Count
                                    <span class="mx-2">|</span>
                                    <i class="bi bi-hand-thumbs-up"></i> @pub.Reactions.Count
                                </div>
                                <small class="text-muted">ID: @pub.Id</small>
                            </div>

                            <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-3">
                                <form asp-action="Approve" asp-route-id="@pub.Id" method="post">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-success btn-sm">
                                        <i class="bi bi-check-circle"></i> Approve
                                    </button>
                                </form>

                                <form asp-action="Reject" asp-route-id="@pub.Id" method="post">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-outline-danger btn-sm">
                                        <i class="bi bi-x-circle"></i> Reject
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Confirm before rejecting
        document.querySelectorAll('form[action*="Reject"]').forEach(form => {
            form.addEventListener('submit', function(e) {
                if (!confirm('Are you sure you want to reject this publication?')) {
                    e.preventDefault();
                }
            });
        });

        // Toast notifications for success/error messages
        const alertSuccess = document.querySelector('.alert-success');
        const alertError = document.querySelector('.alert-danger');

        [alertSuccess, alertError].forEach(alert => {
            if (alert) {
                setTimeout(() => {
                    alert.classList.add('fade');
                    setTimeout(() => alert.remove(), 150);
                }, 5000);
            }
        });
    });
</script>

<style>
    .card {
        transition: all 0.2s ease;
        border: 1px solid rgba(0,0,0,0.125);
    }

        .card:hover {
            transform: translateY(-3px);
            box-shadow: 0 0.5rem 1rem rgba(0,0,0,0.15);
        }

    .badge {
        font-size: 0.75em;
        font-weight: 500;
    }

    .empty-state {
        min-height: 300px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }
</style>